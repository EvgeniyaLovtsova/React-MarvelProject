{"version":3,"file":"static/js/53.fb6a26d0.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/comicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from \"./error.gif\";\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import \"./comicsList.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport { useState, useEffect } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport { Link } from \"react-router-dom\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpecting process state\");\n  }\n};\n\nconst ComicsList = (props) => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const renderComics = (arr) => {\n    const comicsList = arr.map((item, i) => {\n      return (\n        <li\n          className=\"comics__item\"\n          key={i}\n          onClick={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt=\"ultimate war\"\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n    return <ul className=\"comics__grid\">{comicsList}</ul>;\n  };\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderComics(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest()}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from \"react-helmet\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of Marvel comics\" />\r\n        <title>Marvel comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n\r\nexport default useHttp;\r\n","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, process, setProcess, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=ccbd62db6bd6ac17da5b584b9f880788\";\r\n  const _baseCharOffset = 210;\r\n  const _baseComicsOffset = 4;\r\n\r\n  const getAllCharecters = async (offset = _baseCharOffset, name = \"\") => {\r\n    let url = `${_apiBase}characters?`;\r\n    if (name.length > 0) {\r\n      url = url + `name=${name}&${_apiKey}`;\r\n    } else {\r\n      url = url + `limit=9&offset=${offset}&${_apiKey}`;\r\n    }\r\n    const res = await request(url);\r\n    return res.data.results.map(_transformCharecter);\r\n  };\r\n\r\n  const getCharecter = async (id) => {\r\n    const url = `${_apiBase}characters/${id}?${_apiKey}`;\r\n    const res = await request(url);\r\n    return _transformCharecter(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharecter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const url = `${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`;\r\n    const res = await request(url);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const url = `${_apiBase}comics/${id}?${_apiKey}`;\r\n    const res = await request(url);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n      url: comics.urls[0].url,\r\n      description: comics.textObjects[0]?.text\r\n        ? comics.textObjects[0].text\r\n        : \"There is no description for this character\",\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} pages`\r\n        : \"No information about the number of pages\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    process,\r\n    setProcess,\r\n    getAllCharecters,\r\n    getCharecter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","Error","props","comicsList","setComicsList","useState","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","map","item","i","onClick","e","preventDefault","Link","to","concat","id","thumbnail","title","price","renderComics","disabled","ComicsPage","_Fragment","Helmet","name","content","ComicsList","useHttp","request","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","clearError","_apiBase","_apiKey","_transformCharecter","char","description","slice","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","_comics$textObjects$2","prices","textObjects","text","language","pageCount","getAllCharecters","data","results","getCharecter","res","getComic"],"sourceRoot":""}